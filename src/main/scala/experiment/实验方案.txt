1、数据来源：http://snap.stanford.edu/data/index.html
  先选择无向图来做
  (1)输入的可能是 (点，点)，这个时候会默认转化为(点，点，1)，也可能是(点，点，weight)，需要改一下代码
  (2)需要检查一些文件是否存储无向边
  输入可能是txt文件，但是我之前用的是CSV文件，要么改一下代码，要么用python转化为CSV

2、K-L算法 (1) 实验一下不同初始化子图情况下，performance的变化，更换seed
          (2) 画一下实验过程中，performance的变化曲线，逐渐增大，证明这个贪心策略有效
           结论：
           (1) K-L对初始图划分很敏感
           (2)performance逐渐变大，每次交换都会使图划分的质量变好，贪心策略有效


3、谱聚类：(1) 都是分成两个子图的情况下，跟K-L算法的比较；
          (2) 固定划分子图的个数，让迭代次数增加，记录performance变化，画个图
          (3) 找到较优的迭代次数，让划分子图的次数从小变大，performance应该从小变大再变小
          结论：
          (1) 比K-L好，因为K-L固定两个子图大小一样，但是谱聚类不是
          (2) 迭代次数增加，performance可能先增加然后不变
          (3) performance应该从小变大再变小

4、hash：没什么好比较的，就说一下比其他算法差就好了